#include <controller/PolePlacement.hpp>
#include <iostream>
controller::PolePlacement::PolePlacementController::PolePlacementController(float inMass, float inLx, float inLy, float inLz)
{
    mMass = inMass;
    mLx = inLx;
    mLy = inLy;
    mLz = inLz;

    float g = -9.81;
    mA << 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, g, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, -g, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;

    std::cout << "Matrix A:\n" << mA;

    mB << 0, 0, 0, 0,
          0, 0, 0, 0,
          0, 0, 0, 0,
          0, 0, 0, 0,
          1/mMass, 0, 0, 0,
          0, 0, 0, 0, 
          0, 0, 0, 0,
          0, 0, 0, 0,
          0, 0, 0, 0,
          0, 1/mLx, 0, 0,
          0, 0, 1/mLy, 0,
          0, 0, 0, 1/mLz;

    std::cout << "\nMatrix B:\n" << mB;
    
    mC << 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0;
    
    std::cout << "\nMatrix C:\n" << mC;

    mD << 0, 0, 0, 0,
          0, 0, 0, 0,
          0, 0, 0, 0,
          0, 0, 0, 0,
          0, 0, 0, 0,
          0, 0, 0, 0;

    std::cout << "\nMatrix D:\n" << mD << "\n";
}